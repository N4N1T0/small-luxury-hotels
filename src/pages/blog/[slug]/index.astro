---
import { getAllBlogs, getBlogBySlug, getRelatedBlogs } from '@/lib/fetchers/blog';
import BlogCard from '@/components/blogs/BlogCard.astro';
import BlogLayout from '@/layouts/BlogLayout.astro';
import SocialShare from '@/components/blogs/SocialShare.astro';

export async function getStaticPaths() {
  const blogs = await getAllBlogs();
  return blogs.map((blog) => ({
    params: { slug: blog.slug }
  }));
}

const { slug } = Astro.params;
const blog = await getBlogBySlug(slug as string);

if (!blog) {
  return Astro.redirect('/404');
}

const { Content } = await blog.render();
const relatedBlogs = await getRelatedBlogs(blog, 3);
---

<BlogLayout blog={blog}>
  <div class="prose prose-lg container max-w-none p-0">
    <Content />
  </div>

  <div class="flex w-full flex-col items-center justify-between px-8 md:flex-row">
    {
      blog.data.tags && blog.data.tags.length > 0 && (
        <div class="mt-10 flex flex-wrap gap-2 px-4">
          {blog.data.tags.map((tag: string) => (
            <a href={`/blog/tags/${tag}`} class="bg-secondary text-background px-3 py-1 text-sm">
              {tag}
            </a>
          ))}
        </div>
      )
    }
    <SocialShare title={blog.data.title} description={blog.data.description} />
  </div>

  {
    relatedBlogs.length > 0 && (
      <section class="container mt-16" aria-labelledby="related-posts-title">
        <h2 id="related-posts-title" class="text-main mb-8 text-center text-2xl font-bold">
          Art√≠culos relacionados
        </h2>
        <div class="grid grid-cols-1 gap-8 sm:grid-cols-2 lg:grid-cols-3">
          {relatedBlogs.map((relatedBlog) => (
            <BlogCard blog={relatedBlog} />
          ))}
        </div>
      </section>
    )
  }
</BlogLayout>

<script>
  import { animateElements } from '@/lib/scripts';

  animateElements('#blog-card', '-40px', 100, 200);
</script>
